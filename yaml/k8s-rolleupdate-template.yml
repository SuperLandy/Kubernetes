# 创建一个k8s-cmdb项目Deployment，启动4个pod并对资源初始化及限制，配置存活探针和就绪探针对pod进行监控，配合restartPolicy策略一旦存活或就绪探针检查失败则会重启，使用滚动升级策略进行升级

# 配置容器使用资源监控（集群需部署Metrics模块），当cpu使用率（对pod而言）和内存使用率达到阈值时将自动扩容、收缩pod，pod数量依赖minReplicas和maxReplicas配置

# 配置k8s-cmdb项目Deployment的端口及暴露服务的方式

# 结合nginx-ingress配置域名绑定到pod，ingrees拥有自动发现功能,在就绪探针确认后自动将流量转发到新pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: k8s-cmdb
  namespace: default
  labels:
    k8s-app: k8s-cmdb
spec:
  replicas: 4
  selector:
    matchLabels:
      k8s-app: k8s-cmdb
  template:
    metadata:
      name: k8s-cmdb
      creationTimestamp: null
      labels:
        k8s-app: k8s-cmdb
    spec:
      containers:
        - name: k8s-cmdb
          image: 192.168.91.11/k8s-cmdb:v1
          resources: 
            requests:
              cpu: 1
              memory: 1024Mi
            limits:
              cpu: 2
              memory: 2048Mi
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10  #在pod启动后延迟30启动存活探针
            timeoutSeconds: 3        #探针请求超时3秒
            periodSeconds: 30        #间隔30秒启动存活探针
            successThreshold: 1      #处于失败状态时，探测操作至少连续1次的成功才被视为检测通过
            failureThreshold: 3      #处于成功状态时，探测操作至少连续3次的失败才被视为检测不通过
          readinessProbe:            
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10  # 就绪探针，就绪通过后才向pod传入流量
            timeoutSeconds: 3
            periodSeconds: 30
            successThreshold: 1      #处于失败状态时，探测操作至少连续1次的成功才被视为检测通过
            failureThreshold: 3      #处于成功状态时，探测操作至少连续3次的失败才被视为检测不通过
          securityContext:
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler   
  strategy:
    type: RollingUpdate         #滚动升级
    rollingUpdate:
      maxUnavailable: 25%       #在滚动升级时最大无效pod数
      maxSurge: 25%             #最大激增pod数，也就是每次滚动的步长
  revisionHistoryLimit: 10      #滚动升级历史版本保留10
  progressDeadlineSeconds: 600  #如在升级过程中卡住（镜像拉取等问题,这个时候还没有明确的升级失败), 如果超过600秒后还是处于卡住状态则pod状态就为false
status:
  observedGeneration: 5
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1

---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-k8s-cmdb
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k8s-cmdb
  minReplicas: 4
  maxReplicas: 10  
  metrics:
  - type: Resource
    resource: 
      name: cpu
      targetAverageUtilization: 70
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 70

---
kind: Service
apiVersion: v1
metadata:
  name: k8s-cmdb
  namespace: default
  labels:
    k8s-app: k8s-cmdb
spec:
  ports:
    - name: cmdb-8080
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    k8s-app: k8s-cmdb
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}
 
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s-cmdb
spec:
  rules:
  - host: k8s.cmdb.com
    http:
      paths:
      - backend:
          serviceName: k8s-cmdb
          servicePort: 8080
